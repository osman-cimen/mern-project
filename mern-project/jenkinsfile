pipeline {
    agent any

    environment {
        REGISTRY = "<docker-repository>"
        IMAGE_BACKEND = "mern-backend"
        IMAGE_FRONTEND = "mern-frontend"
        KUBE_CONFIG = "/path/to/kubeconfig"
        S3_BUCKET = "mern-stack-artifacts"
        PROMETHEUS_CHART_PATH = "./monitoring/prometheus"
        GRAFANA_CHART_PATH = "./monitoring/grafana"
        TERRAFORM_DIR = "./terraform" // Path to Terraform configuration
    }

    stages {
        stage('Provision Infrastructure') {
            steps {
                script {
                    dir("${TERRAFORM_DIR}") {
                        sh "terraform init"
                        sh "terraform apply -auto-approve"
                    }
                }
            }
        }

        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build and Push Docker Images') {
            steps {
                script {
                    sh "docker build -t ${REGISTRY}/${IMAGE_BACKEND}:${GIT_COMMIT} ./backend"
                    sh "docker build -t ${REGISTRY}/${IMAGE_FRONTEND}:${GIT_COMMIT} ./frontend"
                    sh "docker push ${REGISTRY}/${IMAGE_BACKEND}:${GIT_COMMIT}"
                    sh "docker push ${REGISTRY}/${IMAGE_FRONTEND}:${GIT_COMMIT}"
                }
            }
        }

        stage('Upload Helm Charts to S3') {
            steps {
                script {
                    sh "aws s3 cp ./helm/ s3://${S3_BUCKET}/helm/ --recursive"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "helm upgrade --install mern-stack ./helm --set backend.image=${REGISTRY}/${IMAGE_BACKEND}:${GIT_COMMIT} --set frontend.image=${REGISTRY}/${IMAGE_FRONTEND}:${GIT_COMMIT}"
                }
            }
        }

        stage('Deploy Monitoring Stack') {
            steps {
                script {
                    // Deploy Prometheus
                    sh "helm upgrade --install prometheus ${PROMETHEUS_CHART_PATH} --namespace monitoring --create-namespace"

                    // Deploy Grafana
                    sh "helm upgrade --install grafana ${GRAFANA_CHART_PATH} --namespace monitoring"
                }
            }
        }
    }
}

